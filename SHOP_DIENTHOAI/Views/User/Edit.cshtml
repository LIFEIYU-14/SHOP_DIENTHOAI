@model SHOP_DIENTHOAI.Models.NGUOI_DUNG

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg p-4" style="max-width: 600px; width: 100%; border-radius: 20px;">
        <div class="card-header text-center bg-primary text-white fs-2 fw-bold" style="border-radius: 15px;">
            Chỉnh sửa hồ sơ cá nhân
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.MA_ND)

            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <!-- Tên người dùng -->
                <div class="mb-3">
                    <label class="form-label fs-5"><i class="fas fa-user"></i> Tên người dùng</label>
                    @Html.TextBoxFor(model => model.TEN_ND, new { @class = "form-control fs-5", placeholder = "Nhập tên của bạn" })
                    @Html.ValidationMessageFor(model => model.TEN_ND, "", new { @class = "text-danger" })
                </div>

                <!-- Email -->
                <div class="mb-3">
                    <label class="form-label fs-5"><i class="fas fa-envelope"></i> Email</label>
                    @Html.TextBoxFor(model => model.EMAIL, new { @class = "form-control fs-5", placeholder = "Nhập email" })
                    @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                </div>

                <!-- Số điện thoại -->
                <div class="mb-3">
                    <label class="form-label fs-5"><i class="fas fa-phone"></i> Điện thoại</label>
                    @Html.TextBoxFor(model => model.DIEN_THOAI, new { @class = "form-control fs-5", placeholder = "Nhập số điện thoại" })
                    @Html.ValidationMessageFor(model => model.DIEN_THOAI, "", new { @class = "text-danger" })
                </div>

                <!-- Mật khẩu -->
                <div class="mb-3">
                    <label class="form-label fs-5"><i class="fas fa-lock"></i> Mật khẩu</label>
                    <div class="input-group">
                        @Html.PasswordFor(model => model.MATKHAU, new { @class = "form-control fs-5", id = "passwordField", placeholder = "Nhập mật khẩu" })
                        <button type="button" class="btn btn-outline-secondary" onclick="togglePassword()">
                            <i id="toggleIcon" class="fas fa-eye"></i>
                        </button>
                    </div>
                    @Html.ValidationMessageFor(model => model.MATKHAU, "", new { @class = "text-danger" })
                </div>

                <!-- Địa chỉ -->
                <div class="mb-3">
                    <label class="form-label fs-5"><i class="fas fa-map-marker-alt"></i> Địa chỉ</label>
                    @Html.TextBoxFor(model => model.DIA_CHI, new { @class = "form-control fs-5", placeholder = "Nhập địa chỉ" })
                    @Html.ValidationMessageFor(model => model.DIA_CHI, "", new { @class = "text-danger" })
                </div>

                <!-- Nút lưu -->
                <div class="text-center">
                    <button type="submit" class="btn btn-success w-100 fw-bold fs-5">
                        <i class="fas fa-save"></i> Lưu thông tin
                    </button>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function togglePassword() {
        var passwordField = document.getElementById("passwordField");
        var toggleIcon = document.getElementById("toggleIcon");

        if (passwordField.type === "password") {
            passwordField.type = "text";
            toggleIcon.classList.remove("fa-eye");
            toggleIcon.classList.add("fa-eye-slash");
        } else {
            passwordField.type = "password";
            toggleIcon.classList.remove("fa-eye-slash");
            toggleIcon.classList.add("fa-eye");
        }
    }
</script>
